name: Portal App build and publish

on:
  workflow_dispatch:
  push:
    branches:
      - "*"

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest
    env:
      CI: ""
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          node --version
          npm ci --production

      - name: Build Static Website
        run: npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 1

  dev-push:
    name: Publish app
    environment: development
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ROLE_TO_ASSUME: ${{ vars.ROLE_ARN }}
      DIST: build
    permissions:
      contents: read
      id-token: write
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC_AODNPRTALV2

      - name: Retrieve Parameters - ssm parameter store
        id: getParameters
        run: |
          # Replace '--path' with your specific path from Parameter Store
          bucket=$(aws ssm get-parameter --name "/core/aodn-portal-v2/dev-bucket" --query 'Parameter.Value' --output text)
          distribution_id=$(aws ssm get-parameter --name "/core/aodn-portal-v2/dev-cloudfront-distribution-id" --query 'Parameter.Value' --output text)
          echo "BUCKET=$bucket" >> "$GITHUB_ENV"
          echo "DISTRIBUTION_ID=$distribution_id" >> "$GITHUB_ENV"
  
      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 sync --delete ${{ env.DIST }} s3://${{ env.BUCKET }} --region ap-southeast-2

      - name: Clear cloudfront cache
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ env.DISTRIBUTION_ID }} \
          --paths "/*" \
          --region us-east-1
